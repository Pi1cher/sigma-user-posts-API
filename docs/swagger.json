{
  "swagger": "2.0",
  "info": {
    "description": "This API for creating users and their posts",
    "version": "1.0.0",
    "title": "Users and Posts API",
    "contact": {
      "email": "skete2002@gmail.com"
    }
  },
  "host": "localhost:3001",
  "tags": [
    {
      "name": "user",
      "description": "Operations about user"
    },
    {
      "name": "auth",
      "description": "Operations about authentication"
    },
    {
      "name": "post",
      "description": "Operations about posts"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/users/": {
      "get": {
        "tags": ["user"],
        "summary": "Get users list",
        "description": "This can only be done by the logged in user.",
        "operationId": "getUserList",
        "produces": ["application/json", "application/xml"],
        "security": [{"BearerAuth": []}],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Search by email"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Order in ASC or DESC"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OrderBy field (email, createdAT)"
          }],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserListResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": ["user"],
        "summary": "Get current user",
        "security": [{"BearerAuth": []}],
        "responses": {
          "200": { "description": "successful operation" },
          "401": { "description": "Unauthorized" }
        }
      },
      "put": {
        "tags": ["user"],
        "summary": "Update me",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateMyUser",
        "consumes": ["application/json"],
        "produces": ["application/json", "application/xml"],
        "security": [{"BearerAuth": []}],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/UpdateUserDTO" }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation"
          },
          "400": { "description": "Invalid user supplied" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "User not found" }
        }
      },
      "delete": {
        "tags": ["user"],
        "summary": "Delete user",
        "description": "This can only be done by the logged in user.",
        "operationId": "deleteUser",
        "security": [{"BearerAuth": []}],
        "responses": {
          "204": { "description": "successful operation" },
          "400": { "description": "Invalid username supplied" },
          "404": { "description": "User not found" }
        }
      }
    },
    "/auth/sign-up": {
      "post": {
        "tags": ["auth"],
        "summary": "Sign up",
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User sign-up details",
            "required": true,
            "schema": { "$ref": "#/definitions/SignUp" }
          }
        ],
        "responses": {
          "default": { "description": "successful operation" }
        }
      }
    },
    "/auth/sign-in": {
      "post": {
        "tags": ["auth"],
        "summary": "Sign in",
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User sign-in details",
            "required": true,
            "schema": { "$ref": "#/definitions/SignInDTO" }
          }
        ],
        "responses": {
          "default": { "description": "successful operation" }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["auth"],
        "summary": "Logout",
        "security": [{"BearerAuth": []}],
        "responses": {
          "200": { "description": "successful operation" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/posts/{userId}": {
      "get": {
        "tags": ["post"],
        "summary": "Get posts by user ID",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "successful operation" },
          "404": { "description": "Posts not found" }
        }
      }
    },
    "/posts/me": {
      "post": {
        "tags": ["post"],
        "summary": "Create post",
        "security": [{"BearerAuth": []}],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Post creation details",
            "required": true,
            "schema": { "$ref": "#/definitions/PostCreateDTO" }
          }
        ],
        "responses": {
          "201": { "description": "successful operation" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/posts/me/{postId}": {
      "delete": {
        "tags": ["post"],
        "summary": "Delete post by ID",
        "security": [{"BearerAuth": []}],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "successful operation" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Post not found" }
        }
      },
      "put": {
        "tags": ["post"],
        "summary": "Update post by ID",
        "security": [{"BearerAuth": []}],
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Post update details",
            "required": true,
            "schema": { "$ref": "#/definitions/PostCreateDTO" }
          }
        ],
        "responses": {
          "200": { "description": "successful operation" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Post not found" }
        }
      }
    }
  },
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "definitions": {
    "CreateUserDTO": {
      "type": "object",
      "properties": {
        "email": { "type": "string" },
        "password": { "type": "string" },
        "name": { "type": "string" }
      },
      "required": ["email", "password", "name"]
    },
    "SignInDTO": {
      "type": "object",
      "properties": {
        "email": { "type": "string" },
        "password": { "type": "string" }
      },
      "required": ["email", "password"]
    },
    "SignUp": {
      "type": "object",
      "properties": {
        "email": { "type": "string" },
        "password": { "type": "string" },
        "nickname": { "type": "string" }
      },
      "required": ["email", "password", "nickname"]
    },
    "UpdateUserDTO": {
      "type": "object",
      "properties": {
        "nickname": { "description": "Updated nickname", "type": "string" }
      }
    },
    "UserListResponse": {
      "type": "object",
      "required": ["data", "total"],
      "properties": {
        "data": { "type": "array", "description": "Array of users" },
        "total": { "type": "number" }
      }
    },
    "PostCreateDTO": {
      "type": "object",
      "properties": {
        "text": { "type": "string", "description": "Text of the post" }
      }
    }
  }
}
